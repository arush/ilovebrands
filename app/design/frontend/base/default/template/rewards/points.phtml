<?php

/**
 * WDCA - Sweet Tooth
 * 
 * NOTICE OF LICENSE
 * 
 * This source file is subject to the WDCA SWEET TOOTH POINTS AND REWARDS 
 * License, which extends the Open Software License (OSL 3.0).
 * The Sweet Tooth License is available at this URL: 
 *      http://www.wdca.ca/solutions_page_sweettooth/Sweet_Tooth_License.php
 * The Open Software License is available at this URL: 
 *      http://opensource.org/licenses/osl-3.0.php
 * 
 * DISCLAIMER
 * 
 * By adding to, editing, or in any way modifying this code, WDCA is 
 * not held liable for any inconsistencies or abnormalities in the 
 * behaviour of this code. 
 * By adding to, editing, or in any way modifying this code, the Licensee
 * terminates any agreement of support offered by WDCA, outlined in the 
 * provided Sweet Tooth License. 
 * Upon discovery of modified code in the process of support, the Licensee 
 * is still held accountable for any and all billable time WDCA spent 
 * during the support process.
 * WDCA does not guarantee compatibility with any other framework extension. 
 * WDCA is not responsbile for any inconsistencies or abnormalities in the
 * behaviour of this code if caused by other framework extension.
 * If you did not receive a copy of the license, please send an email to 
 * contact@wdca.ca or call 1-888-699-WDCA(9322), so we can send you a copy 
 * immediately.
 * 
 * @category   [TBT]
 * @package    [TBT_Rewards]
 * @copyright  Copyright (c) 2009 Web Development Canada (http://www.wdca.ca)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
/**
 * Points display template.  This governs how points strings are displayed.
 *
 * @category   TBT
 * @package    TBT_Rewards
 * @author     WDCA Sweet Tooth Team <contact@wdca.ca>
 */
$points_array = $this->getPointsForDisplay();
$num = sizeof($points_array);
if ($this->hasPoints()) {
    // if there are some points: 
    if ($num == 1) {
        //////////// IF YOU ONLY HAVE ONE POINTS CURRENCY THEN ONLY THIS SECTION IS IMPORTANT //////////

        $p = $points_array[0];
        // The next line prints something like "1234 Gold Point(s)"
        if (empty($p['currency'])) {   // if the currency caption is blank or empty
            echo $p['amount'];       // <- then don't display the caption
        } else {                     // <- otherwise display the caption as normal
            echo $p['amount'] . " " . $p['currency'];
        }
        if (!$this->getDontShowStringPoints()) {
            echo " " . (($p['amount'] == 1) ? $this->__('Point') : $this->__('Points'));
        }
    } else {
        /* MORE THAN ONE points currency in the store: */

        foreach ($points_array as $i => $p) {
            /* This will run for each points currency. */
            if (empty($p['currency'])) {   // if the currency caption is blank or empty
                echo $p['amount'];       // <- then don't display the caption
            } else {                     // <- otherwise display the caption as normal
                echo $p['amount'] . " " . $p['currency'];
            }
            if (!$this->getDontShowStringPoints()) {
                echo " " . (($p['amount'] == 1) ? $this->__('Point') : $this->__('Points'));
            }
            if ($i < $num - 1) { /* more points currencies to print... */
                if ($i == $num - 2) { /* one more to go */
                    echo $this->__('and');
                } else {
                    echo ',';
                }
                echo ' ';
            }
        }
    }
} else { /* No points */
    echo $this->__('No Points');
};
?>
