<?php
/**
 * WDCA - Sweet Tooth
 * 
 * NOTICE OF LICENSE
 * 
 * This source file is subject to the WDCA SWEET TOOTH POINTS AND REWARDS 
 * License, which extends the Open Software License (OSL 3.0).
 * The Sweet Tooth License is available at this URL: 
 *      http://www.wdca.ca/solutions_page_sweettooth/Sweet_Tooth_License.php
 * The Open Software License is available at this URL: 
 *      http://opensource.org/licenses/osl-3.0.php
 * 
 * DISCLAIMER
 * 
 * By adding to, editing, or in any way modifying this code, WDCA is 
 * not held liable for any inconsistencies or abnormalities in the 
 * behaviour of this code. 
 * By adding to, editing, or in any way modifying this code, the Licensee
 * terminates any agreement of support offered by WDCA, outlined in the 
 * provided Sweet Tooth License. 
 * Upon discovery of modified code in the process of support, the Licensee 
 * is still held accountable for any and all billable time WDCA spent 
 * during the support process.
 * WDCA does not guarantee compatibility with any other framework extension. 
 * WDCA is not responsbile for any inconsistencies or abnormalities in the
 * behaviour of this code if caused by other framework extension.
 * If you did not receive a copy of the license, please send an email to 
 * contact@wdca.ca or call 1-888-699-WDCA(9322), so we can send you a copy 
 * immediately.
 * 
 * @category   [TBT]
 * @package    [TBT_Rewards]
 * @copyright  Copyright (c) 2009 Web Development Canada (http://www.wdca.ca)
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
/**
 * Points view validation methods.
 * This must go after the javascript captions phtml block
 *
 * @category   TBT
 * @package    TBT_Rewards
 * @author     WDCA Sweet Tooth Team <contact@wdca.ca>
 */
?>

<script type="text/javascript" >
    document.observe("dom:loaded", function() {
        Validation.add(
        'validate-can_use_points', 
        CAPTION_CANNOT_USE_POINTS, 
        function(rule_id) {
            if(rule_id == "") {
                return true;
            } else {
                var can_use = rule_options[rule_id]['can_use_rule']; 
                return can_use;
            }
        }, 
        {}
    );
		
        Validation.add(
        'validate-has_enough_points', 
        CAPTION_NOT_ENOUGH_POINTS, 
        function(rule_id) {
            if(rule_id == "") {
                return true;
            } else {
                var can_use = rule_options[rule_id]['can_use_rule'];
                var amt = rule_options[rule_id]['points_amt']; 
                var curr = rule_options[rule_id]['points_currency_id'];
                
                var qty = parseInt($('qty').getValue());
                // fix NaN or bad value
                if( false == (qty > 0) )
                    qty = 1;
                
                var uses = parseInt($('redemption_rule_uses').getValue());
                // fix NaN or bad value
                if( false == (uses > 0) )
                    uses = 1;
                
                if (customer_points) {
                    if(customer_points[curr] >= qty*amt*uses) {
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    return true;
                }
            }
        }, 
        {}
    );	  	  
    });

</script>

